{
  "stats": {
    "suites": 8,
    "tests": 14,
    "passes": 9,
    "pending": 0,
    "failures": 6,
    "start": "2017-11-15T05:28:51.422Z",
    "end": "2017-11-15T05:28:51.707Z",
    "duration": 285
  },
  "tests": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected { quotes: [] } to deeply equal []",
        "showDiff": true,
        "actual": {
          "quotes": []
        },
        "expected": [],
        "stack": "AssertionError: expected { quotes: [] } to deeply equal []\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:8:44)"
      }
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected { Object (quotes) } to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": {
          "quotes": [
            {
              "id": "6b5d4dcc-6b2c-4d16-9176-a888f04a60d5",
              "content": "Moral indignation is jealousy with a halo.",
              "author": "H.G. Wells",
              "votes": 0
            }
          ]
        },
        "expected": [
          {
            "id": "6b5d4dcc-6b2c-4d16-9176-a888f04a60d5",
            "content": "Moral indignation is jealousy with a halo.",
            "author": "H.G. Wells",
            "votes": 0
          }
        ],
        "stack": "AssertionError: expected { Object (quotes) } to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:22:17)"
      }
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(2) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"eac359f8-2856-4d9e-bef6-ae8f2bbc16b4\"\n    \"votes\": 0\n  }\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"b05a1bbb-1b88-440c-99ca-356bfe1baf37\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"b05a1bbb-1b88-440c-99ca-356bfe1baf37\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [ Array(2) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:45:17)"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"19a33730-3af3-4fe7-bfff-db29382ad287\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"19a33730-3af3-4fe7-bfff-db29382ad287\"\n    \"votes\": 1\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:69:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0dad10f8-7e55-4f5a-9522-0b18ff07acc9\"\n    \"votes\": 3\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0dad10f8-7e55-4f5a-9522-0b18ff07acc9\"\n    \"votes\": 2\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:95:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "\"before each\" hook for \"renders without crashing\"",
      "fullTitle": "QuoteForm Component \"before each\" hook for \"renders without crashing\"",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read property 'contextTypes' of undefined\n    at ShallowComponentWrapper._maskContext (node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:458:34)\n    at ShallowComponentWrapper._processContext (node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:478:30)\n    at ShallowComponentWrapper.mountComponent (node_modules/react-test-renderer/lib/shallow/ReactCompositeComponent.js:177:30)\n    at Object.mountComponent (node_modules/react-test-renderer/lib/shallow/ReactReconciler.js:43:35)\n    at ReactShallowRenderer._render (node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:136:23)\n    at _batchedRender (node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:83:12)\n    at Object.batchedUpdates (node_modules/react-test-renderer/lib/shallow/ReactDefaultBatchingStrategy.js:58:14)\n    at Object.batchedUpdates (node_modules/react-test-renderer/lib/shallow/ReactUpdates.js:95:27)\n    at ReactShallowRenderer.render (node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:110:18)\n    at ReactShallowRenderer.render (node_modules/enzyme/build/react-compat.js:171:37)\n    at node_modules/enzyme/build/ShallowWrapper.js:128:26\n    at ReactDefaultBatchingStrategyTransaction.perform (node_modules/react-test-renderer/lib/shallow/Transaction.js:141:20)\n    at Object.batchedUpdates (node_modules/react-test-renderer/lib/shallow/ReactDefaultBatchingStrategy.js:60:26)\n    at Object.batchedUpdates (node_modules/react-test-renderer/lib/shallow/ReactUpdates.js:95:27)\n    at ReactShallowRenderer.unstable_batchedUpdates (node_modules/react-test-renderer/lib/shallow/ReactShallowRenderer.js:128:25)\n    at performBatchedUpdates (node_modules/enzyme/build/ShallowWrapper.js:103:21)\n    at node_modules/enzyme/build/ShallowWrapper.js:127:9\n    at withSetStateAllowed (node_modules/enzyme/build/Utils.js:284:3)\n    at new ShallowWrapper (node_modules/enzyme/build/ShallowWrapper.js:126:38)\n    at shallow (node_modules/enzyme/build/shallow.js:19:10)\n    at Context.<anonymous> (test/containers/QuotesFormContainerTest.js:20:15)",
        "message": "Cannot read property 'contextTypes' of undefined"
      }
    },
    {
      "title": "should return the initial state",
      "fullTitle": "Quotes Reducer should return the initial state",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected { quotes: [] } to deeply equal []",
        "showDiff": true,
        "actual": {
          "quotes": []
        },
        "expected": [],
        "stack": "AssertionError: expected { quotes: [] } to deeply equal []\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:8:44)"
      }
    },
    {
      "title": "should handle ADD_QUOTE",
      "fullTitle": "Quotes Reducer should handle ADD_QUOTE",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected { Object (quotes) } to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": {
          "quotes": [
            {
              "id": "6b5d4dcc-6b2c-4d16-9176-a888f04a60d5",
              "content": "Moral indignation is jealousy with a halo.",
              "author": "H.G. Wells",
              "votes": 0
            }
          ]
        },
        "expected": [
          {
            "id": "6b5d4dcc-6b2c-4d16-9176-a888f04a60d5",
            "content": "Moral indignation is jealousy with a halo.",
            "author": "H.G. Wells",
            "votes": 0
          }
        ],
        "stack": "AssertionError: expected { Object (quotes) } to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:22:17)"
      }
    },
    {
      "title": "should handle REMOVE_QUOTE",
      "fullTitle": "Quotes Reducer should handle REMOVE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(2) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"eac359f8-2856-4d9e-bef6-ae8f2bbc16b4\"\n    \"votes\": 0\n  }\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"b05a1bbb-1b88-440c-99ca-356bfe1baf37\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"Emile Zola\"\n    \"content\": \"The artist is nothing without the gift, but the gift is nothing without work.\"\n    \"id\": \"b05a1bbb-1b88-440c-99ca-356bfe1baf37\"\n    \"votes\": 0\n  }\n]",
        "stack": "AssertionError: expected [ Array(2) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:45:17)"
      }
    },
    {
      "title": "should handle UPVOTE_QUOTE",
      "fullTitle": "Quotes Reducer should handle UPVOTE_QUOTE",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"19a33730-3af3-4fe7-bfff-db29382ad287\"\n    \"votes\": 0\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"19a33730-3af3-4fe7-bfff-db29382ad287\"\n    \"votes\": 1\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:69:17)"
      }
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and decrement vote count down 1 if vote count is positive",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [ Array(1) ] to deeply equal [ Array(1) ]",
        "showDiff": true,
        "actual": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0dad10f8-7e55-4f5a-9522-0b18ff07acc9\"\n    \"votes\": 3\n  }\n]",
        "expected": "[\n  {\n    \"author\": \"H.G. Wells\"\n    \"content\": \"Moral indignation is jealousy with a halo.\"\n    \"id\": \"0dad10f8-7e55-4f5a-9522-0b18ff07acc9\"\n    \"votes\": 2\n  }\n]",
        "stack": "AssertionError: expected [ Array(1) ] to deeply equal [ Array(1) ]\n    at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)\n    at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)\n    at Context.<anonymous> (test/reducers/quotesReducerTests.js:95:17)"
      }
    }
  ],
  "passes": [
    {
      "title": "should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "fullTitle": "Quotes Actions addQuote(quote: {}) should return an Object with a type of \"ADD_QUOTE\" and a quote object",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions removeQuote(quoteId: Integer) should return an Object with a type of \"REMOVE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions upvoteQuote(quoteId: Integer) should return an Object with a type of \"UPVOTE_QUOTE\" and a quoteId",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "fullTitle": "Quotes Actions downvoteQuote(quoteId: INteger) should return an Object with a type of \"DOWNVOTE_QUOTE\" and a quoteId",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders without crashing",
      "fullTitle": "App Component renders without crashing",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders an h1 tag with \"Quote Maker\"",
      "fullTitle": "App Component always renders an h1 tag with \"Quote Maker\"",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `QuoteForm` component",
      "fullTitle": "App Component always renders a `QuoteForm` component",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "always renders a `Quotes` components",
      "fullTitle": "App Component always renders a `Quotes` components",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "fullTitle": "Quotes Reducer should handle DOWNVOTE_QUOTE and do nothing if vote count is 0",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}